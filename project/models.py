from . import db
from datetime import datetime
from flask_login import UserMixin

# Flask-Login can manage user sessions


class User(UserMixin, db.Model):
    # primary keys are required by SQLAlchemy
    id = db.Column(db.Integer, primary_key=True)
    email = db.Column(db.String(100), unique=True)
    # 60 is the length of the hash usually that is generated by flask
    password = db.Column(db.String(60), nullable=False)
    name = db.Column(db.String(100), unique=True, nullable=False)

    # defining that users can have todos
    # we can use backref to access the user of the todo
    # grab all the objects of todo in one shot
    todos = db.relationship('Todo', backref='author_id', lazy=True)


class Todo(db.Model):
    sno = db.Column(db.Integer, primary_key=True)
    title = db.Column(db.String(80), nullable=False)
    desc = db.Column(db.String(200), nullable=False)
    date_created = db.Column(db.DateTime, default=datetime.utcnow)

    # foreign key searches for the primary key of moudle User
    # user.id is the id of the user module
    author = db.Column(db.Integer, db.ForeignKey('user.id'))


# DROP TABLE IF EXISTS user
# DROP TABLE IF EXISTS post

# CREATE TABLE user(
#     id INTEGER PRIMARY KEY AUTOINCREMENT,
#     username TEXT UNIQUE NOT NULL,
#     password TEXT NOT NULL
# )

# CREATE TABLE post(
#     id INTEGER PRIMARY KEY AUTOINCREMENT,
#     author_id INTEGER NOT NULL,
#     created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
#     title TEXT NOT NULL,
#     body TEXT NOT NULL,
#     FOREIGN KEY(author_id) REFERENCES user(id)
# )
